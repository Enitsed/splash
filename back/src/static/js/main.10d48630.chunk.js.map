{"version":3,"sources":["components/Basic/BasicHeader.js","services/UserService.js","components/Basic/BasicButton.js","components/Basic/BasicNavBar.js","components/Basic/BasicContainer.js","components/Basic/BasicFooter.js","components/Album/AlbumContainer.js","layouts/Basic/BasicLayout.js","Reducers/UserReducer.js","Reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["CustomHeader","react_default","a","createElement","className","this","props","Header","size","children","Component","BasicHeader","styled","_templateObject","UserService","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","requestUserData","userSeq","usersQuery","axios","get","params","query","then","response","data","user","catch","err","console","log","clearUserData","setState","isLogged","bind","assertThisInitialized","BasicButton","_this$props","text","clickHandler","Button","onClick","NavBar","_ref","store","Basic_BasicButton","BasicNavBar","BasicNavBar_templateObject","CustomContainer","Container","Breadcrumb","BreadcrumbSection","link","BreadcrumbDivider","active","BasicContainer","BasicContainer_templateObject","Footer","BasicFooter","BasicFooter_templateObject","Card","Group","itemsPerRow","color","image","AlbumContainer","AlbumContainer_templateObject","Layout","Basic_BasicHeader","Basic_BasicNavBar","Basic_BasicContainer","Album_AlbumContainer","Basic_BasicFooter","BasicLayout","BasicLayout_templateObject","UserReducer","state","arguments","length","undefined","type","alert","indexReducer","combineReducers","reducers","App","createStore","reducer","es","Basic_BasicLayout","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10d48630.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nclass CustomHeader extends Component {\n\n    render() {\n        return (\n            <div className={this.props.className}>\n                <Header size='huge'>\n                    {this.props.children}\n                </Header>\n            </div>\n        );\n    }\n}\n\nconst BasicHeader = styled(CustomHeader)`\n    padding-top : 5vh;\n    text-align : center;\n    width : 100%;\n    min-height : 10vh;\n    background-color : skyblue;\n`;\n\nexport default BasicHeader;","import React, { Component } from 'react';\nimport axios from 'axios';\nexport default class UserService extends Component {\n  constructor(props) {\n    super(props);\n    this.requestUserData.bind(this);\n    this.clearUserData.bind(this);\n  }\n\n  requestUserData = userSeq => {\n    let usersQuery =\n      '{user(user_seq : ' +\n      userSeq +\n      '){user_seq,user_name,gender,user_status}}';\n\n    return axios\n      .get('/graphql', {\n        params: {\n          query: usersQuery,\n        },\n      })\n      .then(response => {\n        return response.data.data.user;\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  };\n\n  clearUserData = () => {\n    this.setState({ user: {}, isLogged: false });\n  };\n\n  render() {\n    return false;\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\n\nclass BasicButton extends Component {\n  render() {\n    const { text, clickHandler } = this.props;\n    return <Button onClick={clickHandler}>{text}</Button>;\n  }\n}\n\nexport default BasicButton;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport UserService from '../../services/UserService';\nimport BasicButton from './BasicButton';\n\nclass NavBar extends Component {\n  render() {\n    const { isLogged, requestUserData, clearUserData } = new UserService();\n    const { className, store } = this.props;\n\n    if (!isLogged) {\n      return (\n        <div className={className}>\n          <BasicButton\n            clickHandler={() => {\n              requestUserData(1, store);\n            }}\n            text=\"로그인\"\n          />\n          <BasicButton text=\"회원가입\" />\n        </div>\n      );\n    }\n    return (\n      <div className={className}>\n        <BasicButton\n          clickHandler={clearUserData}\n          text=\"{{user.user_name}}님 로그아웃\"\n        />\n        <BasicButton text=\"마이페이지\" />\n      </div>\n    );\n  }\n}\n\nconst BasicNavBar = styled(NavBar)`\n  position: absolute;\n  min-width: 200px;\n  min-height: 50px;\n  top: 5px;\n  right: 5px;\n`;\n\nexport default BasicNavBar;\n","import React, { Component } from 'react';\nimport { Container, Breadcrumb, BreadcrumbSection, BreadcrumbDivider } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nclass CustomContainer extends Component {\n\n    render() {\n        return (\n            <Container className={this.props.className}>\n                <Breadcrumb>\n                    <BreadcrumbSection link>Home</BreadcrumbSection>\n                    <BreadcrumbDivider />\n                    <BreadcrumbSection link>Main</BreadcrumbSection>\n                    <BreadcrumbDivider />\n                    <BreadcrumbSection active>Layout</BreadcrumbSection>\n                    <BreadcrumbDivider />\n                </Breadcrumb>\n                <div className=\"contents\">\n                    {this.props.children}\n                </div>\n            </Container>\n        );\n    }\n}\n\nconst BasicContainer = styled(CustomContainer)`\n    background-color: skyblue;\n    min-height : 80vh;\n\n    .breadcrumb {\n        padding : 10px;\n    }\n\n    .contents {\n        min-height : 70vh;\n        display : flex;\n        justify-content : center;\n    }\n`;\n\nexport default BasicContainer;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <div className={this.props.className}>\n                <div>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst BasicFooter = styled(Footer)`\n    width : 100%;\n    min-height : 20vh;\n    display : flex;\n    justify-content : center;\n    background-color : skyblue;\n    \n    div {\n        min-width : 50vw;\n        padding : 20px;\n        \n        p {\n            line-height : 30px;\n        }\n    }\n`;\n\nexport default BasicFooter;","import React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nclass CustomContainer extends Component {\n  render() {\n    return (\n      <Card.Group itemsPerRow={4} className={this.props.className}>\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n        <Card\n          color=\"olive\"\n          image=\"http://pngimg.com/uploads/almond/almond_PNG72.png\"\n        />\n      </Card.Group>\n    );\n  }\n}\n\nconst AlbumContainer = styled(CustomContainer)`\n  min-width: 25vw;\n  max-width: 75vw;\n  margin-top: 15px !important;\n`;\n\nexport default AlbumContainer;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport BasicHeader from '../../components/Basic/BasicHeader';\nimport BasicNavBar from '../../components/Basic/BasicNavBar';\nimport BasicContainer from '../../components/Basic/BasicContainer';\nimport BasicFooter from '../../components/Basic/BasicFooter';\nimport AlbumContainer from '../../components/Album/AlbumContainer';\n\nclass Layout extends Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <BasicHeader>\n          <h2>연습장</h2>\n        </BasicHeader>\n        <BasicNavBar />\n        <BasicContainer>\n          <AlbumContainer />\n        </BasicContainer>\n        <BasicFooter>\n          <h2>By Me</h2>\n          <p>이것은 연습장입니다. 하단에 무엇이 들어갈지 안정해졌어요By Me</p>\n        </BasicFooter>\n      </div>\n    );\n  }\n}\n\nconst BasicLayout = styled(Layout)`\n  min-height: 50vh;\n`;\n\nexport default BasicLayout;\n","const UserReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'login':\n      alert('로그인 하셨습니다.');\n      return (state = true);\n    case 'logout':\n      alert('로그아웃 되었습니다.');\n      return (state = false);\n    default:\n      return state;\n  }\n};\n\nexport { UserReducer };\n","import { combineReducers } from 'redux';\nimport * as reducers from './UserReducer';\n\nconst indexReducer = combineReducers(reducers);\n\nexport default indexReducer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport BasicLayout from './layouts/Basic/BasicLayout';\nimport reducer from './Reducers';\n\nexport default class App extends Component {\n  render() {\n    const store = createStore(reducer);\n    return (\n      <Provider store={store}>\n        <BasicLayout />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}