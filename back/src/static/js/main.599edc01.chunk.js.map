{"version":3,"sources":["components/Basic/BasicButton.js","Reducers/Actions/UserAction.js","components/User/LoginModal.js","services/UserService.js","components/User/JoinModal.js","components/User/FindInfoModal.js","components/Basic/BasicNavBar.js","components/Basic/BasicMenu.js","components/Basic/BasicHeader.js","components/Basic/BasicContainer.js","components/Basic/BasicFooter.js","components/Album/AlbumWrapper.js","services/CategoryService.js","services/BoardService.js","components/Board/BoardListItem.js","components/Board/BoardListView.js","components/Board/BoardWriteView.js","components/Board/BoardCategoryListView.js","components/Board/BoardLayout.js","components/Basic/BasicLayout.js","Reducers/UserReducer.js","Reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["CustomButton","_this$props","this","props","size","className","clickHandler","text","react_default","a","createElement","Button","type","onClick","Component","defaultProps","BasicButton","styled","_templateObject","Login","payload","userData","JSON","parse","stringify","LoginModal","_this","Object","classCallCheck","_super","call","state","modalOpen","id","idError","password","passwordError","accountError","errorMsg","login","bind","assertThisInitialized","_this2","_this$state","loginComplete","userId","userPassword","user","axios","post","variables","user_id","user_password","then","response","data","catch","err","console","error","alert","setState","debug","_this3","_this$state2","Modal","trigger","open","onClose","Header","icon","content","Content","Form","Group","widths","Field","label","placeholder","control","Input","onChange","e","_ref","value","_ref2","Message","header","Actions","color","inverted","Icon","name","connect","dispatch","JoinModal","userName","gender","address","phoneNum","email","userNameError","genderError","addressError","phoneNumError","emailError","test","user_name","phone_num","requestSignUp","undefined","_ref3","inline","Radio","checked","_ref4","_ref5","_ref6","_ref7","_ref8","signUp","FindInfoModal","toggleFind","emailResult","emailSuccess","idResult","idSuccess","findId","findIdInfo","errorCode","concat","result","findPasswordInfo","statusCode","resultMsg","_this4","success","findPassword","BasicNavBar","tryLogin","loggedUserData","cookie","Cookies","get","cookieRequestUserData","tryLogout","history","Fragment","Basic_BasicButton","res","Error","isAxiosError","message","push","User_LoginModal","User_JoinModal","User_FindInfoModal","UserReducer","withRouter","BasicMenu","location","active","currentPath","pathname","react_router_dom","to","startsWith","BasicHeader","react_responsive_default","maxWidth","Basic_BasicNavBar","Basic_BasicMenu","CustomContainer","children","BasicContainer","BasicContainer_templateObject","Footer","BasicFooter","BasicFooter_templateObject","CustomWrapper","showCardCnt","cards","cardColor","cardSrc","fetchPhotos","Card","itemsPerRow","map","i","key","Image","src","Meta","extra","AlbumWrapper","AlbumWrapper_templateObject","CategoryService","categoryLvl","categoryOffset","query","category_lvl","category_offset","_response$data","errors","shift","categories","BoardService","boardOffset","boardLimit","categorySeq","boardTitle","param","category_seq","board_title","board_offset","board_limit","listOfBoard","BoardListItem","scope","board_seq","length","substring","createdAt","board_content","BoardTableWrapper","div","BoardListView_templateObject","SearchInputWrapper","_templateObject2","WriteBtnWrapper","_templateObject3","BoardListView","listData","category","searchInputSubmitHandler","searchInputHandler","searchBtnHandler","target","_this$state3","category_name","width","Array","isArray","onKeyDown","BoardWriteView","BoardCategoryListView","categoryData","board","Board_BoardListItem","colSpan","React","Board","react_router","exact","path","BoardCategoryListView_BoardCategoryListView","Board_BoardListView","BoardWriteView_BoardWriteView","Layout","Basic_BasicHeader","Basic_BasicContainer","component","testComponent","testComponent2","BoardLayout","Basic_BasicFooter","BasicLayout_VisibleTextOnTime","VisibleTextOnTime","time","nowTime","Date","getHours","BasicLayout","BasicLayout_templateObject","initialState","user_status","arguments","reducers","combineReducers","App","store","createStore","reducer","subscribe","getState","unsubscribe","es","Basic_BasicLayout","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.599edc01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'semantic-ui-react';\nimport proptypes from 'prop-types';\n\nclass CustomButton extends Component {\n  render() {\n    const { size, className, clickHandler, text } = this.props;\n    return (\n      <Button\n        type=\"button\"\n        size={size}\n        className={className}\n        onClick={clickHandler}\n      >\n        {text}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  size: proptypes.string,\n  className: proptypes.string,\n  clickHandler: proptypes.func,\n  text: proptypes.string,\n};\n\nCustomButton.defaultProps = {\n  size: 'tiny',\n  className: '',\n  clickHandler: () => ({}),\n  text: '',\n};\n\nconst BasicButton = styled(CustomButton)``;\n\nexport default BasicButton;\n","// define Action type\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\n// define Action Creator function\nexport const Login = (payload) => ({\n  type: LOG_IN,\n  payload: {\n    userData: JSON.parse(JSON.stringify(payload)),\n  },\n});\n\nexport const Logout = () => ({\n  type: LOG_OUT,\n  payload: {\n    userData: {},\n  },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Header,\n  Icon,\n  Modal,\n  Form,\n  Input,\n  Message,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { Login } from '../../Reducers/Actions';\nimport { requestUserData } from '../../services/UserService';\n\nclass LoginModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalOpen: false,\n      id: '',\n      idError: false,\n      password: '',\n      passwordError: false,\n      accountError: false,\n      errorMsg: '',\n    };\n\n    this.login.bind(this);\n  }\n\n  login() {\n    const { id, password } = this.state;\n    const { loginComplete } = this.props;\n\n    if (id === '') {\n      this.setState({ idError: true, errorMsg: '아이디를 다시 입력하세요.' });\n      return;\n    }\n\n    if (password === '') {\n      this.setState({\n        passwordError: true,\n        errorMsg: '패스워드를 다시 입력하세요.',\n      });\n      return;\n    }\n\n    const user = requestUserData(id, password);\n\n    if (user) {\n      user\n        .then((data) => {\n          if (!data) {\n            this.setState({\n              accountError: true,\n              errorMsg:\n                '회원님의 로그인 정보가 잘못되었습니다. 다시 입력 해주세요.',\n            });\n          } else if (data.errorMsg) {\n            this.setState({\n              accountError: true,\n              errorMsg: data.errorMsg,\n            });\n          } else {\n            this.setState({\n              id: '',\n              password: '',\n            });\n\n            loginComplete(data);\n          }\n        })\n        .catch((err) => {\n          console.debug(err);\n        });\n    }\n  }\n\n  render() {\n    const {\n      modalOpen,\n      idError,\n      passwordError,\n      accountError,\n      errorMsg,\n    } = this.state;\n    return (\n      <Modal\n        trigger={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <Button\n            className=\"btn_header\"\n            size=\"tiny\"\n            onClick={() => this.setState({ modalOpen: true })}\n          >\n            Login\n          </Button>\n        }\n        open={modalOpen}\n        onClose={() => this.setState({ modalOpen: false })}\n        size=\"small\"\n      >\n        <Header icon=\"browser\" content=\"Login Form\" />\n        <Modal.Content>\n          <Form size=\"big\" error={idError || passwordError || accountError}>\n            <Form.Group widths=\"equal\">\n              <Form.Field\n                label=\"ID\"\n                placeholder=\"ID\"\n                control={Input}\n                error={idError || accountError}\n                onChange={(e, { value }) =>\n                  this.setState({\n                    id: value,\n                    idError: false,\n                    accountError: false,\n                  })\n                }\n              />\n              <Form.Field\n                label=\"Password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                control={Input}\n                error={passwordError || accountError}\n                onChange={(e, { value }) =>\n                  this.setState({\n                    password: value,\n                    passwordError: false,\n                    accountError: false,\n                  })\n                }\n              />\n            </Form.Group>\n            <Message error header=\"Error\" content={errorMsg} />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"green\" onClick={() => this.login()} inverted>\n            <Icon name=\"checkmark\" />\n            Log in\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginComplete: (userData) => dispatch(Login(userData)),\n  };\n};\n\nLoginModal.defaultProps = {\n  loginComplete() {\n    return () => false;\n  },\n};\nLoginModal.propTypes = {\n  loginComplete: PropTypes.func,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginModal);\n","import axios from 'axios';\nimport Cookies from 'universal-cookie';\n\n// request user Info with cookie\nconst cookieRequestUserData = () => {\n  const cookie = new Cookies().get('user');\n  if (!cookie || cookie === '') {\n    return null;\n  }\n\n  return axios\n    .post('/cookieLogin')\n    .then((response) => {\n      const { data } = response;\n\n      return data;\n    })\n    .catch((err) => {\n      console.error(err);\n      // eslint-disable-next-line no-alert\n      alert('로그인이 실패하였습니다. 잠시 후 재시도 해주세요.');\n      return err;\n    });\n};\n\n// request user Info with input\nconst requestUserData = (userId, userPassword) => {\n  return axios\n    .post('/login', {\n      variables: {\n        user_id: userId,\n        user_password: userPassword,\n      },\n    })\n    .then((response) => {\n      const { data } = response;\n\n      return data;\n    })\n    .catch((err) => {\n      console.error(err);\n      // eslint-disable-next-line no-alert\n      alert('로그인이 실패하였습니다. 잠시 후 재시도 해주세요.');\n      return err;\n    });\n};\n\n// signUp user Info\nconst requestSignUp = (\n  userName,\n  userId,\n  userPassword,\n  gender,\n  address,\n  phoneNum,\n  email,\n) => {\n  return axios\n    .post('/signUp', {\n      variables: {\n        user_name: userName,\n        user_id: userId,\n        user_password: userPassword,\n        gender,\n        address,\n        phone_num: phoneNum,\n        email,\n      },\n    })\n    .then((response) => {\n      const userData = response.data;\n\n      if (!userData) {\n        console.error('no data availiable');\n        return null;\n      }\n\n      return userData;\n    })\n    .catch((err) => {\n      console.error(err);\n      // eslint-disable-next-line no-alert\n      alert('회원가입이 실패하였습니다. 잠시 후 재시도 해주세요.');\n      return err;\n    });\n};\n\n// session kill necessary\nconst clearUserData = () => {\n  return axios\n    .post('/logout')\n    .then((res) => {\n      if (!res || res.statusCode !== 200) {\n        throw new Error('서버에서 오류가 발생하였습니다.');\n      }\n\n      alert(res.data.resultMsg);\n    })\n    .catch((err) => err);\n};\n\nconst findIdInfo = (email) => {\n  return axios\n    .post('/findId', {\n      variables: { email },\n    })\n    .then((response) => {\n      const userData = response.data;\n\n      if (!userData) {\n        // console.error('no data availiable');\n        return null;\n      }\n\n      return userData;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-alert\n      alert('아이디 찾기에 실패하였습니다. 잠시 후 다시 시도 해주세요.');\n      console.error(err);\n    });\n};\n\nconst findPasswordInfo = (id) => {\n  return axios\n    .post('/findPassword', {\n      variables: { user_id: id },\n    })\n    .then((response) => {\n      const result = response.data;\n\n      if (!result) {\n        console.error('no data availiable');\n        return null;\n      }\n\n      return result;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-alert\n      alert('비밀번호 찾기에 실패하였습니다. 잠시 후 다시 시도 해주세요.');\n      console.error(err);\n    });\n};\n\nexport {\n  cookieRequestUserData,\n  requestUserData,\n  clearUserData,\n  requestSignUp,\n  findIdInfo,\n  findPasswordInfo,\n};\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Button,\n  Header,\n  Icon,\n  Modal,\n  Form,\n  Input,\n  Message,\n  Radio,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { Login } from '../../Reducers/Actions';\nimport { requestSignUp } from '../../services/UserService';\n\nclass JoinModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      userName: '',\n      id: '',\n      password: '',\n      gender: 'M',\n      address: '',\n      phoneNum: '',\n      email: '',\n      userNameError: false,\n      passwordError: false,\n      idError: false,\n      genderError: false,\n      addressError: false,\n      phoneNumError: false,\n      emailError: false,\n      accountError: false,\n      errorMsg: '',\n    };\n  }\n\n  signUp() {\n    const {\n      userName,\n      id,\n      password,\n      gender,\n      address,\n      phoneNum,\n      email,\n    } = this.state;\n    const { loginComplete } = this.props;\n\n    if (id === '') {\n      this.setState({ idError: true, errorMsg: '아이디를 다시 입력하세요.' });\n      return;\n    }\n\n    if (password === '') {\n      this.setState({\n        passwordError: true,\n        errorMsg: '패스워드를 다시 입력하세요.',\n      });\n      return;\n    }\n\n    if (!email) {\n      this.setState({\n        emailError: true,\n        errorMsg: '이메일을 다시 입력하세요.',\n      });\n      return;\n    }\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      this.setState({\n        emailError: true,\n        errorMsg: '이메일을 다시 입력하세요.',\n      });\n      return;\n    }\n\n    const user = requestSignUp(\n      userName,\n      id,\n      password,\n      gender,\n      address,\n      phoneNum,\n      email,\n    );\n    if (user !== undefined) {\n      user\n        .then((data) => {\n          if (!data) {\n            this.setState({\n              accountError: true,\n              errorMsg:\n                '회원 가입 처리 중 오류가 발생하였습니다. 잠시 후 다시 시도해주세요.',\n            });\n          } else if (data.errorMsg) {\n            this.setState({\n              accountError: true,\n              errorMsg: data.errorMsg,\n            });\n          } else {\n            // reset input\n            this.setState({\n              modalOpen: false,\n              userName: '',\n              id: '',\n              password: '',\n              gender: 'M',\n              address: '',\n              phoneNum: '',\n              email: '',\n            });\n\n            loginComplete(data);\n          }\n        })\n        .catch((err) => {\n          console.debug(err);\n        });\n    }\n  }\n\n  render() {\n    const {\n      modalOpen,\n      userNameError,\n      idError,\n      passwordError,\n      genderError,\n      addressError,\n      phoneNumError,\n      emailError,\n      accountError,\n      errorMsg,\n      gender,\n    } = this.state;\n    return (\n      <Modal\n        trigger={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <Button\n            className=\"btn_header\"\n            size=\"tiny\"\n            onClick={() => this.setState({ modalOpen: true })}\n          >\n            Join\n          </Button>\n        }\n        open={modalOpen}\n        onClose={() => this.setState({ modalOpen: false })}\n        size=\"small\"\n      >\n        <Header icon=\"browser\" content=\"Join Form\" />\n        <Modal.Content>\n          <Form\n            size=\"big\"\n            error={\n              userNameError ||\n              idError ||\n              passwordError ||\n              genderError ||\n              addressError ||\n              phoneNumError ||\n              emailError ||\n              accountError\n            }\n          >\n            <Form.Field\n              id=\"form-input-control-error-id\"\n              label=\"ID\"\n              placeholder=\"ID\"\n              control={Input}\n              error={idError || accountError}\n              onChange={(e, { value }) =>\n                this.setState({\n                  id: value,\n                  idError: false,\n                  accountError: false,\n                })\n              }\n            />\n            <Form.Field\n              label=\"Password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              control={Input}\n              error={passwordError || accountError}\n              onChange={(e, { value }) =>\n                this.setState({\n                  password: value,\n                  passwordError: false,\n                  accountError: false,\n                })\n              }\n            />\n            <Form.Field\n              label=\"User Name\"\n              placeholder=\"User Name\"\n              control={Input}\n              error={userNameError || accountError}\n              onChange={(e, { value }) =>\n                this.setState({\n                  userName: value,\n                  userNameError: false,\n                  accountError: false,\n                })\n              }\n            />\n            <Form.Group inline>\n              <Form.Field label=\"Gender\"></Form.Field>\n              <Form.Field\n                control={Radio}\n                error={genderError || accountError}\n                label=\"Male\"\n                value=\"M\"\n                checked={gender === 'M'}\n                onClick={(e, { value }) => {\n                  this.setState({\n                    gender: value,\n                    genderError: false,\n                    accountError: false,\n                  });\n                }}\n              />\n              <Form.Field\n                control={Radio}\n                error={genderError || accountError}\n                label=\"Femail\"\n                value=\"F\"\n                checked={gender === 'F'}\n                onClick={(e, { value }) =>\n                  this.setState({\n                    gender: value,\n                    genderError: false,\n                    accountError: false,\n                  })\n                }\n              />\n            </Form.Group>\n            <Form.Field\n              label=\"Address\"\n              placeholder=\"Address\"\n              control={Input}\n              error={addressError || accountError}\n              onChange={(e, { value }) =>\n                this.setState({\n                  address: value,\n                  addressError: false,\n                  accountError: false,\n                })\n              }\n            />\n            <Form.Field\n              label=\"Phone Number\"\n              placeholder=\"Phone Number\"\n              control={Input}\n              error={phoneNumError || accountError}\n              onChange={(e, { value }) =>\n                this.setState({\n                  phoneNum: value,\n                  phoneNumError: false,\n                  accountError: false,\n                })\n              }\n            />\n            <Form.Field\n              label=\"Email\"\n              placeholder=\"Email\"\n              control={Input}\n              error={emailError || accountError}\n              onChange={(e, { value }) =>\n                this.setState({\n                  email: value,\n                  emailError: false,\n                  accountError: false,\n                })\n              }\n            />\n            <Message error header=\"Error\" content={errorMsg} />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"red\"\n            onClick={() => this.setState({ modalOpen: false })}\n            inverted\n          >\n            Cancel\n          </Button>\n          <Button color=\"green\" onClick={() => this.signUp()} inverted>\n            <Icon name=\"checkmark\" />\n            Submit\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nJoinModal.defaultProps = {\n  loginComplete() {\n    return false;\n  },\n};\n\nJoinModal.propTypes = {\n  loginComplete: propTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginComplete: (userData) => dispatch(Login(userData)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(JoinModal);\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Header,\n  Icon,\n  Modal,\n  Form,\n  Message,\n  Input,\n} from 'semantic-ui-react';\nimport { findIdInfo, findPasswordInfo } from '../../services/UserService';\n\nclass FindInfoModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalOpen: false,\n      toggleFind: 'email',\n      email: '',\n      emailError: false,\n      emailResult: null,\n      emailSuccess: false,\n      id: '',\n      idError: false,\n      idResult: null,\n      idSuccess: false,\n      errorMsg: '입력 오류',\n    };\n\n    this.findId.bind(this);\n  }\n\n  findId() {\n    const { email } = this.state;\n\n    if (\n      email === '' ||\n      // eslint-disable-next-line no-useless-escape\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        email,\n      )\n    ) {\n      this.setState({\n        emailError: true,\n        errorMsg: '이메일이 올바른 형식이 아니거나 입력되지 않았습니다.',\n      });\n      return;\n    }\n\n    findIdInfo(email)\n      .then((data) => {\n        if (!data) {\n          this.setState({\n            emailError: true,\n            errorMsg: '오류가 발생하였습니다. 잠시 후 다시 시도해 주세요.',\n          });\n        } else if (data.errorCode) {\n          this.setState({\n            emailError: true,\n            errorMsg: `${data.errorCode} : ${data.errorMsg}`,\n          });\n        } else {\n          this.setState({\n            emailError: false,\n            emailSuccess: true,\n            emailResult: `회원님의 아이디는 ${data}입니다.`,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  findPassword() {\n    const { id } = this.state;\n\n    if (id === '') {\n      this.setState({ idError: true });\n      return;\n    }\n\n    findPasswordInfo(id)\n      .then((data) => {\n        if (!data) {\n          this.setState({\n            idError: true,\n            errorMsg: '오류가 발생하였습니다. 잠시 후 다시 시도해 주세요.',\n          });\n        } else if (data.statusCode !== 200) {\n          this.setState({\n            idError: true,\n            errorMsg: `${data.statusCode} : ${data.errorMsg}`,\n          });\n        } else {\n          this.setState({\n            idError: false,\n            idSuccess: true,\n            idResult: `${data.statusCode} : ${data.resultMsg}`,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  render() {\n    const {\n      modalOpen,\n      errorMsg,\n      toggleFind,\n      emailError,\n      emailSuccess,\n      emailResult,\n      idError,\n      idSuccess,\n      idResult,\n    } = this.state;\n    return (\n      <Modal\n        trigger={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <Button\n            className=\"btn_header\"\n            size=\"tiny\"\n            onClick={() => this.setState({ modalOpen: true })}\n          >\n            Find ID / Password\n          </Button>\n        }\n        open={modalOpen}\n        onClose={() => this.setState({ modalOpen: false })}\n        size=\"small\"\n      >\n        <Header icon=\"browser\" content=\"Find ID / Password\" />\n        <Modal.Content>\n          {toggleFind ? (\n            <Form size=\"big\" error={emailError} success={emailSuccess}>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  label=\"Email을 입력해주세요\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  control={Input}\n                  error={emailError}\n                  onChange={(e, { value }) => {\n                    this.setState({\n                      email: value,\n                      emailError: false,\n                      emailSuccess: false,\n                    });\n                  }}\n                />\n              </Form.Group>\n              <Message error header=\"Error\" content={errorMsg} />\n              <Message success header=\"Success\" content={emailResult} />\n            </Form>\n          ) : (\n            <Form size=\"big\" error={idError} success={idSuccess}>\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  label=\"ID를 입력해주세요\"\n                  placeholder=\"ID\"\n                  type=\"text\"\n                  control={Input}\n                  error={idError}\n                  onChange={(e, { value }) => {\n                    this.setState({\n                      id: value,\n                      idError: false,\n                      idSuccess: false,\n                    });\n                  }}\n                />\n              </Form.Group>\n              <Message error header=\"Error\" content={errorMsg} />\n              <Message success header=\"Success\" content={idResult} />\n            </Form>\n          )}\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"yellow\"\n            onClick={() =>\n              this.setState({\n                toggleFind: !toggleFind,\n                idError: false,\n                emailError: false,\n              })\n            }\n            inverted\n          >\n            {toggleFind ? '비밀번호 찾기로 변경' : '아이디 찾기로 변경'}\n          </Button>\n          {toggleFind ? (\n            <Button color=\"green\" onClick={() => this.findId()} inverted>\n              <Icon name=\"checkmark\" />\n              Find ID\n            </Button>\n          ) : (\n            <Button color=\"green\" onClick={() => this.findPassword()} inverted>\n              <Icon name=\"checkmark\" />\n              Find Password\n            </Button>\n          )}\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default FindInfoModal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport BasicButton from './BasicButton';\nimport LoginModal from '../User/LoginModal';\nimport JoinModal from '../User/JoinModal';\nimport FindInfoModal from '../User/FindInfoModal';\nimport { Logout, Login } from '../../Reducers/Actions';\nimport {\n  cookieRequestUserData,\n  clearUserData,\n} from '../../services/UserService';\n\nclass BasicNavBar extends Component {\n  componentDidMount() {\n    const { tryLogin } = this.props;\n\n    const loggedUserData = cookieRequestUserData();\n    if (loggedUserData) {\n      loggedUserData.then((userData) => {\n        tryLogin(userData);\n      });\n    }\n  }\n\n  render() {\n    const { userData, tryLogout, history } = this.props;\n    return (\n      <div className=\"nav\">\n        {userData && userData.user_id ? (\n          <>\n            <p>\n              Welcome!\n              <br />\n              {userData.user_id}\n            </p>\n            <BasicButton\n              className=\"btn_header\"\n              clickHandler={() => {\n                clearUserData()\n                  .then((data) => {\n                    if (!data || data.isAxiosError) {\n                      alert(\n                        '해당 서비스 요청에 응답이 없습니다. 잠시 후 다시 시도해 주세요.',\n                      );\n                      console.error(data.message);\n                      return;\n                    }\n                    tryLogout();\n                    history.push('/');\n                  })\n                  .catch((err) => console.error(err));\n              }}\n              text=\"Logout\"\n              size=\"tiny\"\n            />\n          </>\n        ) : (\n          <>\n            <LoginModal />\n            <JoinModal />\n            <FindInfoModal />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ UserReducer }) => ({\n  userData: UserReducer.userData,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    tryLogin: (userData) => dispatch(Login(userData)),\n    tryLogout: () => dispatch(Logout()),\n  };\n};\n\nBasicNavBar.defaultProps = {\n  userData: null,\n  tryLogin: undefined,\n  tryLogout: undefined,\n  history: undefined,\n};\n\nBasicNavBar.propTypes = {\n  userData: Proptypes.shape({\n    user_name: Proptypes.string,\n    user_status: Proptypes.string,\n  }),\n  tryLogin: Proptypes.func,\n  tryLogout: Proptypes.func,\n  history: Proptypes.shape({}),\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(BasicNavBar));\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Proptypes from 'prop-types';\n\nclass BasicMenu extends Component {\n  render() {\n    const { location, active } = this.props;\n    const currentPath = location.pathname;\n    return (\n      <div className={active ? 'menu' : 'menu hidden'}>\n        <ul>\n          <li className={currentPath === '/' ? 'active' : ''}>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className={currentPath.startsWith('/board') ? 'active' : ''}>\n            <Link to=\"/board\">Board</Link>\n          </li>\n          <li className={currentPath === '/album' ? 'active' : ''}>\n            <Link to=\"/album\">Album</Link>\n          </li>\n          <li className={currentPath === '/about' ? 'active' : ''}>\n            <Link to=\"/about\">About me</Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(BasicMenu);\n\nBasicMenu.defaultProps = {\n  location: { pathname: '/' },\n  active: true,\n};\n\nBasicMenu.propTypes = {\n  location: Proptypes.shape({\n    pathname: Proptypes.string,\n  }),\n  active: Proptypes.bool,\n};\n","import React, { Component } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport MediaQuery from 'react-responsive';\nimport BasicNavBar from './BasicNavBar';\nimport BasicMenu from './BasicMenu';\n\nclass BasicHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { active: false };\n  }\n\n  render() {\n    const { active } = this.state;\n    return (\n      <header>\n        <div className=\"basic_header\">\n          <MediaQuery maxWidth={1024}>\n            <Icon\n              className=\"sidebar main_logo\"\n              size=\"big\"\n              onClick={() => {\n                this.setState({ active: !active });\n              }}\n            />\n          </MediaQuery>\n          <div className=\"title_box\">\n            <h1 className=\"title\">Lorem Ipsum</h1>\n          </div>\n          <BasicNavBar />\n        </div>\n        <BasicMenu active={active} />\n      </header>\n    );\n  }\n}\n\nexport default BasicHeader;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport propTypes from 'prop-types';\n\nclass CustomContainer extends Component {\n  render() {\n    const { className, children } = this.props;\n    return (\n      <div className={className}>\n        <section className=\"contents\">{children}</section>\n      </div>\n    );\n  }\n}\n\nCustomContainer.defaultProps = {\n  className: '',\n  children: <></>,\n};\n\nCustomContainer.propTypes = {\n  className: propTypes.string,\n  children: propTypes.node,\n};\n\nconst BasicContainer = styled(CustomContainer)``;\n\nexport default BasicContainer;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <div className=\"footer\">\n          <h2 className=\"footer-title\">\n            2019. 08. 31. 계약 종료.\n          </h2>\n          <p className=\"footer-text\">\n            copyright by enitsed.\n          </p>\n        </div>\n      </footer>\n    );\n  }\n}\n\nconst BasicFooter = styled(Footer)``;\n\nexport default BasicFooter;\n","import React, { Component } from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nclass CustomWrapper extends Component {\n  constructor() {\n    super();\n    this.fetchPhotos.bind(this);\n  }\n\n  state = {\n    showCardCnt: 4,\n    cards: [\n      {\n        cardColor: 'olive',\n        cardSrc: 'http://pngimg.com/uploads/almond/almond_PNG72.png',\n      },\n      {\n        cardColor: 'olive',\n        cardSrc: 'http://pngimg.com/uploads/almond/almond_PNG72.png',\n      },\n    ],\n  };\n\n  componentDidMount() {\n    this.fetchPhotos();\n  }\n\n  fetchPhotos = () => {};\n\n  render() {\n    return (\n      <div className=\"album_container\">\n        <Card.Group\n          itemsPerRow={this.state.showCardCnt}\n          className={this.props.className}\n        >\n          {this.state.cards.map((e, i) => {\n            return (\n              <Card key={i} color={e.cardColor}>\n                <Image src={e.cardSrc} />\n                <Card.Content>\n                  <Card.Header>제목</Card.Header>\n                  <Card.Meta>내용</Card.Meta>\n                </Card.Content>\n                <Card.Content extra>{e.cardColor}</Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n      </div>\n    );\n  }\n}\n\nconst AlbumWrapper = styled(CustomWrapper)``;\n\nexport default AlbumWrapper;\n","import axios from 'axios';\n\nconst getCategoryData = (categoryLvl, categoryOffset) => {\n  const categoryQuery = `query \n    categories($category_lvl: Int!, $category_offset: Int!) {\n      categories(category_lvl: $category_lvl,  category_offset: $category_offset) {\n        category_seq\n        category_lvl\n        category_name\n        listOfBoard {\n          board_seq\n          board_title\n          board_content\n          board_div_cd\n          createdAt\n          user {\n            user_seq\n            user_id\n            user_name\n          }\n        }\n      }\n    }`;\n\n  return axios\n    .post('/graphql', {\n      query: categoryQuery,\n      variables: {\n        category_lvl: categoryLvl,\n        category_offset: categoryOffset,\n      },\n    })\n    .then((response) => {\n      const { data, errors } = response.data;\n\n      if ((errors && errors.shift()) || !data.categories) {\n        // 데이터 없을 경우 빈 배열\n        console.error('no data availiable');\n        return [];\n      }\n\n      return data.categories;\n    })\n    .catch((err) => {\n      console.error(err);\n      return err;\n    });\n};\n\nexport default { getCategoryData };\n","import axios from 'axios';\n\nconst getBoardListData = (\n  { categorySeq, boardTitle },\n  boardOffset,\n  boardLimit,\n) => {\n  const boardQuery = `query\n    listOfBoard($param: Board_Input_List!, $board_offset: Int!, $board_limit: Int!) {\n      listOfBoard(param: $param, board_offset: $board_offset, board_limit: $board_limit) {\n        board_seq\n        board_title\n        board_content\n        createdAt\n        user {\n          user_seq\n          user_id\n          user_name\n        }\n      }\n    }`;\n\n  return axios\n    .post('/graphql', {\n      query: boardQuery,\n      variables: {\n        param: {\n          category_seq: categorySeq,\n          board_title: boardTitle,\n        },\n        board_offset: boardOffset,\n        board_limit: boardLimit,\n      },\n    })\n    .then((response) => {\n      const { data, errors } = response.data;\n\n      if ((errors && errors.shift()) || !data.listOfBoard) {\n        // 데이터 없을 경우 빈 배열\n        return [];\n      }\n\n      return data.listOfBoard;\n    })\n    .catch((err) => {\n      console.error(err);\n      return err;\n    });\n};\n\nexport default { getBoardListData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BoardListItem = ({ data }) => {\n  // 제목 ellipsis 처리를 위한 변수\n  const maxTitleLength = 30;\n\n  return (\n    <tr className=\"board_table_row\">\n      <th scope=\"row\">{data.board_seq}</th>\n      <td>\n        {data.board_title.length > maxTitleLength\n          ? `${data.board_title.substring(0, maxTitleLength)}...`\n          : data.board_title}\n      </td>\n      <td>{data.user.user_id}</td>\n      <td>{data.createdAt}</td>\n      <td>{data.board_content}</td>\n    </tr>\n  );\n};\n\nBoardListItem.propTypes = {\n  data: PropTypes.shape({\n    board_seq: PropTypes.string,\n    board_title: PropTypes.string,\n    user: PropTypes.shape({\n      user_id: PropTypes.string,\n    }),\n    createdAt: PropTypes.string,\n    board_content: PropTypes.string,\n  }).isRequired,\n};\n\nexport default BoardListItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Input, Button } from 'semantic-ui-react';\nimport BoardService from '../../services/BoardService';\nimport BoardListItem from './BoardListItem';\n\nconst BoardTableWrapper = styled.div`\n  width: 100%;\n`;\n\nconst SearchInputWrapper = styled.div`\n  display: flex\n  width: 226px\n  justify-content: space-between\n`;\n\nconst WriteBtnWrapper = styled.div`\n  margin-left: 20px;\n`;\n\nclass BoardListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listData: [],\n      boardOffset: 0,\n      boardLimit: 10,\n      param: {\n        categorySeq: props.category.category_seq,\n        boardTitle: '',\n      },\n    };\n\n    this.searchInputSubmitHandler = this.searchInputSubmitHandler.bind(this);\n    this.searchInputHandler = this.searchInputHandler.bind(this);\n    this.searchBtnHandler = this.searchBtnHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const { param, boardOffset, boardLimit } = this.state;\n\n    BoardService.getBoardListData(param, boardOffset, boardLimit)\n      .then((data) => {\n        this.setState({ listData: data });\n      })\n      .catch((err) => console.error(err));\n  }\n\n  searchInputHandler(e) {\n    const { category } = this.props;\n\n    this.setState({\n      param: { categorySeq: category.category_seq, boardTitle: e.target.value },\n    });\n  }\n\n  searchInputSubmitHandler(e) {\n    if (e.key === 'Enter') {\n      const { param, boardOffset, boardLimit } = this.state;\n\n      BoardService.getBoardListData(param, boardOffset, boardLimit)\n        .then((data) => {\n          this.setState({ listData: data });\n        })\n        .catch((err) => console.error(err));\n    }\n  }\n\n  searchBtnHandler() {\n    const { param, boardOffset, boardLimit } = this.state;\n\n    BoardService.getBoardListData(param, boardOffset, boardLimit)\n      .then((data) => {\n        this.setState({ listData: data });\n      })\n      .catch((err) => console.error(err));\n  }\n\n  render() {\n    const { category } = this.props;\n    const { listData } = this.state;\n\n    return (\n      <BoardTableWrapper>\n        <table className=\"board_table\">\n          <caption>\n            <Link to={`/board/boardList/${category.category_name}`}>\n              {category.category_name}\n            </Link>\n          </caption>\n          <thead className=\"board_table_head\">\n            <tr className=\"board_table_row\">\n              <th scope=\"col\" width=\"50px;\">\n                No\n              </th>\n              <th scope=\"col\" width=\"300px;\">\n                Title\n              </th>\n              <th scope=\"col\" width=\"80px;\">\n                Writer\n              </th>\n              <th scope=\"col\" width=\"100px;\">\n                Date\n              </th>\n              <th scope=\"col\" width=\"70px;\">\n                Views\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"board_table_body\">\n            {Array.isArray(listData)\n              ? listData.map((data) => BoardListItem(data))\n              : null}\n          </tbody>\n        </table>\n        <div className=\"board_list_control_box_wrapper\">\n          <div className=\"board_list_control_box\">\n            <SearchInputWrapper>\n              <Input\n                size=\"mini\"\n                placeholder=\"search\"\n                onChange={this.searchInputHandler}\n                onKeyDown={this.searchInputSubmitHandler}\n              />\n              <Button\n                size=\"tiny\"\n                content=\"search\"\n                onClick={this.searchBtnHandler}\n              />\n            </SearchInputWrapper>\n            <WriteBtnWrapper>\n              <Button size=\"tiny\">\n                <Link\n                  to={`/board/boardWrite?category_seq=${category.category_seq}`}\n                >\n                  write\n                </Link>\n              </Button>\n            </WriteBtnWrapper>\n          </div>\n        </div>\n      </BoardTableWrapper>\n    );\n  }\n}\n\nBoardListView.propTypes = {\n  category: PropTypes.shape({\n    category_seq: PropTypes.string.isRequired,\n    category_name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default BoardListView;\n","import React, { Component } from 'react';\n\nexport default class BoardWriteView extends Component {\n  render() {\n    return <div>작성 페이지</div>;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport BoardListItem from './BoardListItem';\n\nexport default class BoardCategoryListView extends React.Component {\n  render() {\n    const { categoryData } = this.props;\n\n    return (\n      <div className=\"board_category_box\">\n        {categoryData.map((category, i) => (\n          <table className=\"board_table\" key={category.category_seq}>\n            <caption>\n              <Link to={`/board/boardList/${category.category_name}`}>\n                {category.category_name}\n              </Link>\n            </caption>\n            <thead className=\"board_table_head\">\n              <tr className=\"board_table_row\">\n                <th scope=\"col\" width=\"50px;\">\n                  No\n                </th>\n                <th scope=\"col\" width=\"300px;\">\n                  Title\n                </th>\n                <th scope=\"col\" width=\"80px;\">\n                  Writer\n                </th>\n                <th scope=\"col\" width=\"100px;\">\n                  Date\n                </th>\n                <th scope=\"col\" width=\"70px;\">\n                  Views\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"board_table_body\">\n              {category.listOfBoard.length > 0 ? (\n                category.listOfBoard.map((board) => {\n                  return <BoardListItem data={board} key={board.board_seq} />;\n                })\n              ) : (\n                <tr className=\"board_table_row\">\n                  <th scope=\"row\" colSpan=\"5\">\n                    글이 존재하지 않습니다.\n                  </th>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        ))}\n      </div>\n    );\n  }\n}\n\nBoardCategoryListView.propTypes = {\n  categoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      category_name: PropTypes.string.isRequired,\n      category_seq: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CategoryService from '../../services/CategoryService';\nimport BoardListView from './BoardListView';\nimport BoardWriteView from './BoardWriteView';\nimport BoardCategoryListView from './BoardCategoryListView';\n\nexport default class Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoryLvl: 1,\n      categoryOffset: 0,\n      categoryData: [],\n    };\n  }\n\n  componentDidMount() {\n    const { categoryLvl, categoryOffset } = this.state;\n\n    CategoryService.getCategoryData(categoryLvl, categoryOffset)\n      .then((data) => {\n        if (Array.isArray(data)) {\n          this.setState({ categoryData: data });\n        }\n      })\n      .catch((err) => console.error(err));\n  }\n\n  render() {\n    const { categoryData } = this.state;\n\n    return (\n      <div className=\"board_container\">\n        <Route exact path=\"/board\">\n          <BoardCategoryListView categoryData={categoryData} />\n        </Route>\n        {categoryData.map((category) => (\n          <Route\n            key={category.category_seq}\n            exact\n            path={`/board/boardList/${category.category_name}`}\n          >\n            <BoardListView category={category} />\n          </Route>\n        ))}\n        <Route exact path=\"/board/boardWrite/\">\n          <BoardWriteView />\n        </Route>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Proptypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Route } from 'react-router-dom';\nimport BasicHeader from './BasicHeader';\nimport BasicContainer from './BasicContainer';\nimport BasicFooter from './BasicFooter';\nimport AlbumWrapper from '../Album/AlbumWrapper';\nimport BoardLayout from '../Board/BoardLayout';\n\nclass Layout extends Component {\n  render() {\n    const { className } = this.props;\n    return (\n      <div className={className}>\n        <BasicHeader />\n        <BasicContainer>\n          <Route path=\"/\" exact component={testComponent} />\n          <Route path=\"/timeline\" component={testComponent2} />\n          <Route path=\"/board\" component={BoardLayout} />\n          <Route path=\"/album\" component={AlbumWrapper} />\n        </BasicContainer>\n        <BasicFooter />\n      </div>\n    );\n  }\n}\n\nfunction testComponent() {\n  return (\n    <div className=\"poem-title\">\n      <VisibleTextOnTime />\n    </div>\n  );\n}\n\nconst VisibleTextOnTime = () => {\n  const time = {\n    midnight: 0,\n    daytime: 8,\n    evening: 18,\n  };\n\n  const nowTime = new Date().getHours();\n\n  if (nowTime >= time.evening) {\n    // evening\n    return <p className=\"evening\">저녁엔 주황바다</p>;\n  }\n  if (nowTime >= time.daytime && nowTime < time.evening) {\n    // daytime\n    return <p className=\"daytime\">아침엔 푸른바다</p>;\n  }\n  if (nowTime >= time.midnight) {\n    // midnight\n    return <p className=\"midnight\">새벽엔 검은바다</p>;\n  }\n  return <p>default</p>;\n};\n\nfunction testComponent2() {\n  return (\n    <div className=\"poem-title\">\n      <p>꼬꼬댁 꼬꼬</p>\n    </div>\n  );\n}\n\nLayout.defaultProps = {\n  className: '',\n};\n\nLayout.propTypes = {\n  className: Proptypes.string,\n};\n\nconst BasicLayout = styled(Layout)`\n  min-height: 50vh;\n`;\n\nexport default BasicLayout;\n","import { LOG_IN, LOG_OUT } from './Actions/UserAction';\n\n// define User Initial States\nconst initialState = {\n  userData: {\n    user_name: '',\n    user_id: '',\n    user_status: '',\n  },\n};\n\n// write reducer here\nconst UserReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOG_IN:\n      return payload;\n    case LOG_OUT:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default UserReducer;\n","import { combineReducers } from 'redux';\nimport UserReducer from './UserReducer';\n\n// Combined Reducer\n// this will be our stores\n// If you want to add more reducers, Import them and Add it below\nconst reducers = combineReducers({\n  UserReducer,\n});\n\nexport default reducers;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BasicLayout from './components/Basic/BasicLayout';\nimport reducer from './Reducers';\n\nexport default class App extends Component {\n  render() {\n    const store = createStore(reducer);\n    const unsubscribe = store.subscribe(() => console.debug(store.getState()));\n    unsubscribe();\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <BasicLayout />\n        </Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}